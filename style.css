*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
    color: #545454;
    display: flex;
    justify-content: center;
    align-items: center;
    /* height: 100vh; */

}
.container {
    background: #14BDAC;
    border: 1px solid red;
    margin: 50px;
    padding: 50px;
    border-radius: 25px;
}
.title {
    text-align: center;
}

.title span {
    color: #f2ebd3;
}

.status-action {
    margin-top: 25px;
    font-size: 25px;
    display: flex;
    justify-content: space-around;
    height: 30px;
}

.status span {
    color:#f2ebd3;
}

.reset {
    cursor: pointer;
}

.reset:hover {
    color: #F2ebd3;
}

.game-grid {
    background-color: #8DA192;
    display: grid;
    grid-template-columns: 250px 250px 250px; /* repeat(3, 1fr)-> it means it divides it into 3 equal spaces to 1 fr unit. fr-> means divides into equal spaces  */
    /*     OR    */
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-gap: 15px;
    margin-top: 50px;


}
.game-cell {
    height: 200px;
    width: 200px;
    background-color: #14BDAC;
    display: flex;
    justify-content: center;
    align-items: center;
}

.x,
.o {
  cursor: default;
}

.x::after{
    content: '×';
    font-size: 200px;
}

.o::after{
    content: '○';
    color: #F2ebd3;
    font-size: 225px;
}

.won::after {
    color: #BD022F;
}

/*----------------- RESPONSIVE---------------- */

@media only screen and (max-width: 1024px) {
    .game-grid {
      margin-top: 25px;
      grid-gap: 10px;
    }
  
    .game-cell {
      height: 150px;
      width: 150px;
    }
  
    .x::after {
      font-size: 150px;
    }
  
    .o::after {
      font-size: 175px;
    }
  }
  
  @media only screen and (max-width: 540px) {
    .container {
      margin: 25px;
      padding: 25px;
    }
  
    .game-cell {
      height: 100px;
      width: 100px;
    }
  
    .x::after {
      font-size: 100px;
    }
  
    .o::after {
      font-size: 125px;
    }
  }